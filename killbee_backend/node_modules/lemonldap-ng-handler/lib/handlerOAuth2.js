(function() {
  /*
   * LemonLDAP::NG handler-oauth2 for Node.js/express
   * (see https://lemonldap-ng.org/documentation/2.0/servertoserver)
   *
   * See README.md for license and copyright
   */
  var Handler, HandlerOAuth2;

  Handler = require('./').class;

  HandlerOAuth2 = class HandlerOAuth2 extends Handler {
    constructor(args) {
      var self;
      self = super(args);
      self;
      self;
    }

    fetchId(req) {
      var access_token, authorization;
      authorization = req.cgiParams['HTTP_AUTHORIZATION'];
      if ((authorization != null) && authorization.match(/^Bearer (.+)$/i)) {
        access_token = authorization.replace(/^Bearer (.+)$/i, "$1");
        this.logger.debug(`Found OAuth2 access token ${access_token}`);
        return access_token;
      }
      return super.fetchId(req);
    }

    retrieveSession(access_token) {
      var d, self;
      self = this;
      return d = new Promise(function(resolve, reject) {
        var oidcSession;
        return oidcSession = self.conf.oidcStorageModule.get(id).then(function(session) { // kind OIDCI
          if (session.user_session_id) {
            return super.retrieveSession(session.user_session_id).then(function(s) {
              return resolve(s);
            }).catch(function(e) {
              return reject(false);
            });
          }
        }).catch(function(e) {
          self.userLogger.info(`OAuth2 token not found in store: ${e}`);
          return reject(false);
        });
      });
    }

  };

  module.exports = HandlerOAuth2;

}).call(this);
